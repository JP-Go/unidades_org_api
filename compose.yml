services:
  org_db:
    image: postgres:16-alpine
    container_name: org_db
    environment:
      - POSTGRES_DB=org_db
      - POSTGRES_USER=org_api_user
      - POSTGRES_PASSWORD=org_api_password
    expose:
      - 5432
    networks:
      - org_api
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    volumes:
      - org_db_data:/var/lib/postgresql:ro
  org_api:
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgres://org_api_user:org_api_password@org_db:5432/org_db}
      - OTLP_PROTO_TRACE_EXPORTER_ENDPOINT=${OTLP_PROTO_TRACE_EXPORTER_ENDPOINT:-http://org_jaeger:4318/v1/traces}
      - OTLP_PROTO_METRICS_EXPORTER_ENDPOINT=${OTLP_PROTO_METRICS_EXPORTER_ENDPOINT:-http://org_jaeger:4318/v1/metrics}
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      org_db:
        condition: service_healthy
    networks:
      - org_api

  org_jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    expose:
      - 16686
      - 4317
      - 4318
      - 9411
    ports:
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 9411:9411
    networks:
      - org_api

volumes:
  org_db_data:
networks:
  org_api:
    driver: bridge
